import pandas as pd
import openpyxl
import xlsxwriter
import math
from datetime import date, timedelta
from collections import OrderedDict
#   Reading and Displaying the data frame imported from the Excel Sheet
df = pd.read_csv(r"C:\Users\Mypc\Desktop\Thesis\datasets_549966_1224804_complete.csv")


dateS={'30/01/2020': 0, '31/01/2020': 0, '01/02/2020': 0, '02/02/2020': 0, '03/02/2020': 0, '04/02/2020': 0, '05/02/2020': 0, '06/02/2020': 0, '07/02/2020': 0, '08/02/2020': 0, '09/02/2020': 0, '10/02/2020': 0, '11/02/2020': 0, '12/02/2020': 0, '13/02/2020': 0, '14/02/2020': 0, '15/02/2020': 0, '16/02/2020': 0, '17/02/2020': 0, '18/02/2020': 0, '19/02/2020': 0, '20/02/2020': 0, '21/02/2020': 0, '22/02/2020': 0, '23/02/2020': 0, '24/02/2020': 0, '25/02/2020': 0, '26/02/2020': 0, '27/02/2020': 0, '28/02/2020': 0, '29/02/2020': 0, '01/03/2020': 0, '02/03/2020': 0, '03/03/2020': 0, '04/03/2020': 0, '05/03/2020': 0, '06/03/2020': 0, '07/03/2020': 0, '08/03/2020': 0, '09/03/2020': 0, '10/03/2020': 0, '11/03/2020': 0, '12/03/2020': 0, '13/03/2020': 0, '14/03/2020': 0, '15/03/2020': 0, '16/03/2020': 0, '17/03/2020': 0, '18/03/2020': 0, '19/03/2020': 0, '20/03/2020': 0, '21/03/2020': 0, '22/03/2020': 0, '23/03/2020': 0, '24/03/2020': 0, '25/03/2020': 0, '26/03/2020': 0, '27/03/2020': 0, '28/03/2020': 0, '29/03/2020': 0, '30/03/2020': 0, '31/03/2020': 0, '01/04/2020': 0, '02/04/2020': 0, '03/04/2020': 0, '04/04/2020': 0, '05/04/2020': 0, '06/04/2020': 0, '07/04/2020': 0, '08/04/2020': 0, '09/04/2020': 0, '10/04/2020': 0, '11/04/2020': 0, '12/04/2020': 0, '13/04/2020': 0, '14/04/2020': 0, '15/04/2020': 0, '16/04/2020': 0, '17/04/2020': 0, '18/04/2020': 0, '19/04/2020': 0, '20/04/2020': 0, '21/04/2020': 0, '22/04/2020': 0, '23/04/2020': 0, '24/04/2020': 0, '25/04/2020': 0, '26/04/2020': 0, '27/04/2020': 0, '28/04/2020': 0, '29/04/2020': 0, '30/04/2020': 0, '01/05/2020': 0, '02/05/2020': 0, '03/05/2020': 0, '04/05/2020': 0, '05/05/2020': 0, '06/05/2020': 0, '07/05/2020': 0, '08/05/2020': 0, '09/05/2020': 0, '10/05/2020': 0, '11/05/2020': 0, '12/05/2020': 0, '13/05/2020': 0, '14/05/2020': 0, '15/05/2020': 0, '16/05/2020': 0, '17/05/2020': 0, '18/05/2020': 0, '19/05/2020': 0, '20/05/2020': 0, '21/05/2020': 0, '22/05/2020': 0, '23/05/2020': 0, '24/05/2020': 0, '25/05/2020': 0, '26/05/2020': 0, '27/05/2020': 0, '28/05/2020': 0, '29/05/2020': 0, '30/05/2020': 0, '31/05/2020': 0, '01/06/2020': 0, '02/06/2020': 0, '03/06/2020': 0, '04/06/2020': 0, '05/06/2020': 0, '06/06/2020': 0, '07/06/2020': 0, '08/06/2020': 0}

prevConf = {}
prevRec = {}
prevDeaths = {}
timeSeriesConf = {}
timeSeriesDeaths ={}
timeSeriesRec ={}
timeSeriesMortality={}
def checkKey(dict, key):
    if key in dict.keys():
        return 1
    else:
        return 0

for i in df.itertuples():

    if checkKey(timeSeriesConf, i[2]) != 1:
        sdate = date(2020, 1, 30)  # start date
        edate = date(2020, 6, 8)  # end date

        delta = edate - sdate  # as timedelta
        dictDate = OrderedDict({'30/01/2020': 0, '31/01/2020': 0, '01/02/2020': 0, '02/02/2020': 0, '03/02/2020': 0, '04/02/2020': 0, '05/02/2020': 0, '06/02/2020': 0, '07/02/2020': 0, '08/02/2020': 0, '09/02/2020': 0, '10/02/2020': 0, '11/02/2020': 0, '12/02/2020': 0, '13/02/2020': 0, '14/02/2020': 0, '15/02/2020': 0, '16/02/2020': 0, '17/02/2020': 0, '18/02/2020': 0, '19/02/2020': 0, '20/02/2020': 0, '21/02/2020': 0, '22/02/2020': 0, '23/02/2020': 0, '24/02/2020': 0, '25/02/2020': 0, '26/02/2020': 0, '27/02/2020': 0, '28/02/2020': 0, '29/02/2020': 0, '01/03/2020': 0, '02/03/2020': 0, '03/03/2020': 0, '04/03/2020': 0, '05/03/2020': 0, '06/03/2020': 0, '07/03/2020': 0, '08/03/2020': 0, '09/03/2020': 0, '10/03/2020': 0, '11/03/2020': 0, '12/03/2020': 0, '13/03/2020': 0, '14/03/2020': 0, '15/03/2020': 0, '16/03/2020': 0, '17/03/2020': 0, '18/03/2020': 0, '19/03/2020': 0, '20/03/2020': 0, '21/03/2020': 0, '22/03/2020': 0, '23/03/2020': 0, '24/03/2020': 0, '25/03/2020': 0, '26/03/2020': 0, '27/03/2020': 0, '28/03/2020': 0, '29/03/2020': 0, '30/03/2020': 0, '31/03/2020': 0, '01/04/2020': 0, '02/04/2020': 0, '03/04/2020': 0, '04/04/2020': 0, '05/04/2020': 0, '06/04/2020': 0, '07/04/2020': 0, '08/04/2020': 0, '09/04/2020': 0, '10/04/2020': 0, '11/04/2020': 0, '12/04/2020': 0, '13/04/2020': 0, '14/04/2020': 0, '15/04/2020': 0, '16/04/2020': 0, '17/04/2020': 0, '18/04/2020': 0, '19/04/2020': 0, '20/04/2020': 0, '21/04/2020': 0, '22/04/2020': 0, '23/04/2020': 0, '24/04/2020': 0, '25/04/2020': 0, '26/04/2020': 0, '27/04/2020': 0, '28/04/2020': 0, '29/04/2020': 0, '30/04/2020': 0, '01/05/2020': 0, '02/05/2020': 0, '03/05/2020': 0, '04/05/2020': 0, '05/05/2020': 0, '06/05/2020': 0, '07/05/2020': 0, '08/05/2020': 0, '09/05/2020': 0, '10/05/2020': 0, '11/05/2020': 0, '12/05/2020': 0, '13/05/2020': 0, '14/05/2020': 0, '15/05/2020': 0, '16/05/2020': 0, '17/05/2020': 0, '18/05/2020': 0, '19/05/2020': 0, '20/05/2020': 0, '21/05/2020': 0, '22/05/2020': 0, '23/05/2020': 0, '24/05/2020': 0, '25/05/2020': 0, '26/05/2020': 0, '27/05/2020': 0, '28/05/2020': 0, '29/05/2020': 0, '30/05/2020': 0, '31/05/2020': 0, '01/06/2020': 0, '02/06/2020': 0, '03/06/2020': 0, '04/06/2020': 0, '05/06/2020': 0, '06/06/2020': 0, '07/06/2020': 0, '08/06/2020': 0})

        for j in range(delta.days + 1):
            day = sdate + timedelta(days=j)
            dater = day.strftime('%d/%m/%Y')
            dictDate[dater] = 0
        timeSeriesConf[i[2]]= dictDate
    timeSeriesConf[i[2]][i[1]] = i[5]

    if checkKey(timeSeriesDeaths, i[2]) != 1:
        sdate = date(2020, 1, 30)  # start date
        edate = date(2020, 6, 8)  # end date

        delta = edate - sdate  # as timedelta
        dictDate = {}
        for j in range(delta.days + 1):
            day = sdate + timedelta(days=j)
            dater = day.strftime('%d/%m/%Y')
            dictDate[dater] = 0
        timeSeriesDeaths[i[2]]= dictDate
    timeSeriesDeaths[i[2]][i[1]] = i[6]

    if checkKey(timeSeriesMortality, i[2]) != 1:
        sdate = date(2020, 1, 30)  # start date
        edate = date(2020, 6, 8)  # end date

        delta = edate - sdate  # as timedelta
        dictDate = {}
        for j in range(delta.days + 1):
            day = sdate + timedelta(days=j)
            dater = day.strftime('%d/%m/%Y')
            dictDate[dater] = 0
        timeSeriesMortality[i[2]]= dictDate
    timeSeriesMortality[i[2]][i[1]] = round((i[6]*100)/i[5],2)

    if checkKey(timeSeriesRec, i[2]) != 1:
        sdate = date(2020, 1, 30)  # start date
        edate = date(2020, 6, 8)  # end date

        delta = edate - sdate  # as timedelta
        dictDate = {}
        for j in range(delta.days + 1):
            day = sdate + timedelta(days=j)
            dater = day.strftime('%d/%m/%Y')
            dictDate[dater] = 0
        timeSeriesRec[i[2]]= dictDate
    timeSeriesRec[i[2]][i[1]] = i[7]


#print(timeSeriesConf)
#print(timeSeriesDeaths)
#print(timeSeriesRec)
print(timeSeriesMortality)
#print(timeSeriesConf.keys())
#df = pd.DataFrame(confirmedCases,columns =['Id', 'State', 'Date', 'ConfirmedCases', 'Deaths', 'Recovery'])
#print(df)
finalTimeSeries=[]

for state in timeSeriesMortality:
    stateTimeSeries=[]
    stateTimeSeries.append(state)
    stateTimeSeries.append("")
    for count in timeSeriesMortality[state].values():
        stateTimeSeries.append(count)
    finalTimeSeries.append(stateTimeSeries)

print(finalTimeSeries)

df = pd.DataFrame(finalTimeSeries,columns =['State', 'Image', '30/01/2020', '31/01/2020', '01/02/2020', '02/02/2020', '03/02/2020', '04/02/2020', '05/02/2020', '06/02/2020', '07/02/2020', '08/02/2020', '09/02/2020', '10/02/2020', '11/02/2020', '12/02/2020', '13/02/2020', '14/02/2020', '15/02/2020', '16/02/2020', '17/02/2020', '18/02/2020', '19/02/2020', '20/02/2020', '21/02/2020', '22/02/2020', '23/02/2020', '24/02/2020', '25/02/2020', '26/02/2020', '27/02/2020', '28/02/2020', '29/02/2020', '01/03/2020', '02/03/2020', '03/03/2020', '04/03/2020', '05/03/2020', '06/03/2020', '07/03/2020', '08/03/2020', '09/03/2020', '10/03/2020', '11/03/2020', '12/03/2020', '13/03/2020', '14/03/2020', '15/03/2020', '16/03/2020', '17/03/2020', '18/03/2020', '19/03/2020', '20/03/2020', '21/03/2020', '22/03/2020', '23/03/2020', '24/03/2020', '25/03/2020', '26/03/2020', '27/03/2020', '28/03/2020', '29/03/2020', '30/03/2020', '31/03/2020', '01/04/2020', '02/04/2020', '03/04/2020', '04/04/2020', '05/04/2020', '06/04/2020', '07/04/2020', '08/04/2020', '09/04/2020', '10/04/2020', '11/04/2020', '12/04/2020', '13/04/2020', '14/04/2020', '15/04/2020', '16/04/2020', '17/04/2020', '18/04/2020', '19/04/2020', '20/04/2020', '21/04/2020', '22/04/2020', '23/04/2020', '24/04/2020', '25/04/2020', '26/04/2020', '27/04/2020', '28/04/2020', '29/04/2020', '30/04/2020', '01/05/2020', '02/05/2020', '03/05/2020', '04/05/2020', '05/05/2020', '06/05/2020', '07/05/2020', '08/05/2020', '09/05/2020', '10/05/2020', '11/05/2020', '12/05/2020', '13/05/2020', '14/05/2020', '15/05/2020', '16/05/2020', '17/05/2020', '18/05/2020', '19/05/2020', '20/05/2020', '21/05/2020', '22/05/2020', '23/05/2020', '24/05/2020', '25/05/2020', '26/05/2020', '27/05/2020', '28/05/2020', '29/05/2020', '30/05/2020', '31/05/2020', '01/06/2020', '02/06/2020', '03/06/2020', '04/06/2020', '05/06/2020', '06/06/2020', '07/06/2020', '08/06/2020'])
print(df)
#df.to_excel(r"C:\Users\Mypc\Desktop\TimeSeriesMortality.xlsx")